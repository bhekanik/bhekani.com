---
import { getCollection, type CollectionEntry } from "astro:content";
import Link from "../../components/Link.astro";
import Prose from "../../components/Prose.astro";
import MarkdownPostLayout from "../../layouts/MarkdownPostLayout.astro";
import { cn } from "../../utils/cn";

export async function getStaticPaths() {
  const thoughts = await getCollection("thoughts");
  return thoughts
    .filter((thought) => thought.data.published)
    .map((thought) => ({
      params: { slug: thought.slug },
      props: { thought },
    }));
}

export interface Props {
  thought: CollectionEntry<"thoughts">;
}

const { thought } = Astro.props;
const { Content, headings } = await thought.render();
---

<MarkdownPostLayout thought={thought}>
  {
    headings.length > 0 && (
      <section class="mb-4">
        <h2 class="mb-2">Table of Contents</h2>

        <ul class="ml-2">
          {headings.map((heading) => (
            <li
              class={cn(
                "text-sm",
                heading.depth === 3
                  ? "ml-4 border-l border-[hsl(var(--links))] pl-4"
                  : heading.depth === 4
                    ? "ml-8 border-l border-[hsl(var(--links))] pl-4"
                    : ""
              )}
            >
              <Link href={`#${heading.slug}`}>{heading.text}</Link>
            </li>
          ))}
        </ul>
      </section>
    )
  }
  <hr class="my-4 border-[hsl(var(--muted))]" />
  <Prose>
    <Content class="content" />
  </Prose>
</MarkdownPostLayout>
