---
import { getCollection, type CollectionEntry } from "astro:content"
import AllTags from "../../components/AllTags.astro"
import MainContainer from "../../components/MainContainer.astro"
import ThoughtCard from "../../components/ThoughtCard.astro"
import BaseLayout from "../../layouts/BaseLayout.astro"

const allThoughts = await getCollection("thoughts")
const sortedThoughts = allThoughts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
)
// const firstThought = sortedThoughts.shift()

const yearToThoughts = sortedThoughts.reduce<
  Record<number, CollectionEntry<"thoughts">[]>
>((acc, thought) => {
  const year = new Date(thought.data.pubDate).getFullYear()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(thought)
  return acc
}, {})
const pageTitle = "Thoughts"
---

<BaseLayout pageTitle={pageTitle}>
  <MainContainer>
    <div class="w-full flex justify-center mb-8 font-bold">
      <a
        class="px-3 p-2 text- border-b-[1px] border-l-[1px] border-r-[1px] border-[hsl(var(--muted))]"
        href="/rss.xml"
      >
        Subscribe to RSS
      </a>
    </div>

    <AllTags title="Filter by tag" />
    <!-- {firstThought && <LatestThoughtCard thought={firstThought} />} -->

    {
      Object.entries(yearToThoughts)
        .sort((a, b) => Number(b[0]) - Number(a[0]))
        .map(([year, thoughts]) => (
          <>
            <h2 class="text-2xl mb-4 border-b-2 mt-8 pb-2">
              {year} ({thoughts.length})
            </h2>
            <div class="grid gap-4">
              {thoughts.map((thought) => (
                <ThoughtCard thought={thought} />
              ))}
            </div>
          </>
        ))
    }
  </MainContainer>
</BaseLayout>
