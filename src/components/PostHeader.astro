---
import { Image } from "astro:assets"
import type { CollectionEntry } from "astro:content"
import Case from "case"
import { format } from "date-fns"
import Link from "./Link.astro"
import PostDescription from "./PostDescription.astro"
import TagsList from "./TagsList.astro"
import ViewCounter from "./ViewCounter.svelte"

type Props = {
  post: CollectionEntry<"posts">
}

const {
  post: { data: frontmatter, slug },
} = Astro.props

const imageSrc = frontmatter.image ?? ""
---

<div transition:name={`card-${slug}`}>
  <p class="my-4">
    <Link
      transition:name={`back-${slug}`}
      class="hover:text-[hsl(var(--muted-foreground))]"
      href="/posts/"
    >
      ‚Üê All posts
    </Link>
  </p>
  <div class="w-full mb-4 h-28 overflow-hidden">
    {
      imageSrc && (
        <Image
          transition:name={`image-${slug}`}
          class="w-full object-cover h-full"
          src={imageSrc as any}
          width="1200"
          height="112"
          alt="Post header"
        />
      )
    }
  </div>

  <PostDescription description={frontmatter.description} slug={slug} />

  <TagsList tags={frontmatter.tags} />

  <div class="mt-4 mb-8">
    <p class="text-sm mb-0">{Case.upper(frontmatter.author)}</p>
    <time
      transition:name={`date-${slug}`}
      class="text-sm text-[hsl(var(--muted-foreground))]"
      datetime={frontmatter.pubDate.toDateString()}
    >
      {format(frontmatter.pubDate, "MMMM dd, yyyy")}
    </time>
    <!-- <IncrementAndShowViews /> -->
    <ViewCounter client:load="svelte" slug={slug} />
  </div>
</div>
