---
import { Image } from "astro:assets";
import { format } from "date-fns";
const {
  post: {
    data: { image, tags, title, description, pubDate: date },
    slug,
  },
} = Astro.props;
---

<div
  class="card mb-8 text-[hsl(var(--card-foreground))] bg-[hsl(var(--muted))] items-center duration-1000"
>
  <div class="content p-10">
    <a href={`/thoughts/${slug}/`} class="h-fit">
      <h1 transition:name={`title-${slug}`} class="text-xl mb-2 text-center">
        {title}
      </h1>
    </a>

    <p
      transition:name={`description-${slug}`}
      class="mt-6 mb-8 text-center text-[hsl(var(--muted-foreground))]"
    >
      <em>{description}</em>
    </p>
    <div class="flex gap-4 whitespace-nowrap text-ellipsis">
      {
        tags.map((tag: string) => (
          <a
            class="text-sm hover:text-[hsl(var(--muted-foreground))]"
            href={`/tags/${tag}`}
          >
            #{tag}
          </a>
        ))
      }
    </div>
    <p
      transition:name={`date-${slug}`}
      class="text-sm text-[hsl(var(--muted-foreground))]"
    >
      {format(date, "MMMM dd, yyyy")}
    </p>
  </div>

  {
    image && (
      <div class="image h-full overflow-hidden">
        <Image
          transition:name={`image-${slug}`}
          class="object-cover h-full"
          src={image}
          width="1000"
          height="10800"
          alt=""
        />
      </div>
    )
  }
</div>

<style>
  .card {
    display: grid;
    color: hsl(var(--card-foreground));
  }
  .card:has(.image) {
    grid-template:
      "image" 1fr
      "content" 4fr;
  }
  .card:has(.image) {
    grid-template: "image content" / 1fr 1fr;
  }
  .card:not(:has(.image)) {
    grid-template: "content" / 1fr;
  }
  .content {
    grid-area: content;
    display: grid;
    grid-template:
      "title" auto-fit
      "description" 1fr
      "date" auto-fit
      "tags" auto-fit;
    place-items: center;
  }
  @media screen and (min-width: 768px) {
    .card:has(.image) {
      grid-template: "image content" / 1fr 1fr;
    }
  }
  .image {
    grid-area: image;
  }
  a {
    color: hsl(var(--card-foreground));
  }
  a:hover {
    background-color: transparent;
  }
</style>
