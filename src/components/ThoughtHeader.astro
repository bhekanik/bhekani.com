---
import { Image } from "astro:assets"
import type { CollectionEntry } from "astro:content"
import Case from "case"
import { format } from "date-fns"
import Link from "../components/Link.astro"
import TagsList from "./TagsList.astro"
import ThoughtDescription from "./ThoughtDescription.astro"

type Props = {
  thought: CollectionEntry<"thoughts">
}

const {
  thought: { data: frontmatter, slug },
} = Astro.props

const imageSrc =
  frontmatter.image ?? "https://source.unsplash.com/random/?landscape"

const body = { ip: Astro.clientAddress ?? null, slug: Astro.params.slug }

const res = await fetch(`${Astro.url.origin}/api/thoughts/views`, {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
  },
  body: JSON.stringify(body),
})

let views = 0
if (res.ok) {
  ;({ views } = await res.json())
}
---

<div transition:name={`card-${slug}`}>
  <p class="my-4">
    <Link
      transition:name={`back-${slug}`}
      class="hover:text-[hsl(var(--muted-foreground))]"
      href="/thoughts/"
    >
      ‚Üê All thoughts
    </Link>
  </p>
  <div class="w-full mb-4 h-28 overflow-hidden">
    <Image
      transition:name={`image-${slug}`}
      class="w-full object-cover h-full"
      src={imageSrc as any}
      width="1200"
      height="112"
      alt="Thought header"
    />
  </div>

  <ThoughtDescription description={frontmatter.description} slug={slug} />

  <TagsList tags={frontmatter.tags} />

  <div class="mt-4 mb-8">
    <p class="text-sm mb-0">{Case.upper(frontmatter.author)}</p>
    <time
      transition:name={`date-${slug}`}
      class="text-sm text-[hsl(var(--muted-foreground))]"
      datetime={frontmatter.pubDate.toDateString()}
    >
      {format(frontmatter.pubDate, "MMMM dd, yyyy")}
    </time>
    <p class="text-sm text-[hsl(var(--muted-foreground))]">
      {`${views} view${views === 1 ? "" : "s"}`}
    </p>
  </div>
</div>
