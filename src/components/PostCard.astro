---
import { Image } from "astro:assets"
import type { CollectionEntry } from "astro:content"
import { format } from "date-fns"
import PostDescription from "./PostDescription.astro"
import TagsList from "./TagsList.astro"
import Views from "./Views.svelte"
import Card from "./Card.astro"

type Props = {
  post: CollectionEntry<"posts">
}

const {
  post: {
    slug,
    data: { tags, title, image, pubDate: date },
  },
} = Astro.props
---

<Card hover class="group" transition:name={`card-${slug}`}>
  <div class="grid grid-cols-[1fr_auto] gap-4 p-[var(--space-6)]">
    <div class="flex flex-col gap-[var(--space-2)]">
      <a href={`/posts/${slug}/`} class="block hover:bg-transparent">
        <h2 transition:name={`title-${slug}`} class="text-xl font-semibold group-hover:text-[hsl(var(--primary))] transition-colors duration-[var(--transition-fast)]">{title}</h2>
      </a>
      <div class="flex items-center gap-[var(--space-3)] text-sm text-[hsl(var(--muted-foreground))]">
        <time
          transition:name={`date-${slug}`}
          datetime={date.toISOString()}
        >
          {format(date, "MMMM dd, yyyy")}
        </time>
        <span>Â·</span>
        <Views client:load="svelte" slug={slug} />
      </div>
      <PostDescription description={title} slug={slug} />
      <TagsList tags={tags} />
    </div>

    {
      image && (
        <div class="relative w-32 h-32 overflow-hidden rounded-[var(--radius-md)] flex-shrink-0">
          <Image
            transition:name={`image-${slug}`}
            class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-[var(--transition-slow)]"
            src={image}
            width="128"
            height="128"
            alt={`Cover image for ${title}`}
            loading="lazy"
            decoding="async"
          />
        </div>
      )
    }
  </div>
</Card>

