---
import { getCollection, type CollectionEntry } from "astro:content"
import PostListItem from "./PostListItem.astro"
import RecentPosts from "./RecentPosts.astro"

type Props = {
  frontmatter: CollectionEntry<"posts">["data"]
  slug: string
}

const {
  frontmatter: { tags },
  slug,
} = Astro.props

const allPosts = await getCollection("posts")
const posts = allPosts.filter((post) => {
  if (!post.data.published) return false
  if (slug === post.slug) return false

  let keep = false
  tags.forEach((tag: string) => {
    if (post.data.tags.includes(tag)) {
      keep = true
    }
  })

  return keep
})
---

{
  posts.length === 0 ? (
    <RecentPosts />
  ) : (
    <div class="my-8">
      <h2 class="text-2xl mb-4 mt-2">Related Posts</h2>
      <ul class="flex flex-col gap-8">
        {posts.slice(0, 3).map((post) => (
          <PostListItem post={post} />
        ))}
      </ul>

      <a
        class="mt-4 flex h-6 rounded-lg leading-7 text-gray-600 transition-all dark:text-gray-400 dark:hover:text-gray-600"
        href="/posts"
      >
        See all posts â†’
      </a>
    </div>
  )
}
